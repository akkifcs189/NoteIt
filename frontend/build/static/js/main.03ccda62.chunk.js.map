{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/Header/Header.js","components/Footer/Footer.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateNote/CreateNote.js","screens/EditNote/EditNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Container","Brand","to","Toggle","Collapse","id","Nav","className","Form","FormControl","placeholder","onChange","e","target","value","style","maxHeight","navbarScroll","Link","NavDropdown","title","Item","href","Divider","onClick","removeItem","push","Footer","width","position","bottom","display","justifyContent","Row","Col","LandingPage","useEffect","getItem","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","notes","error","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","console","log","get","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmPassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNoteAction","rows","Date","toLocaleDateString","EditNote","match","date","setDate","params","updatedAt","fetching","put","updateNoteAction","ProfileScreen","location","userUpdate","md","user","varient","src","alt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03ccda62.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import axios from \"axios\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      {\n        email,\n        password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      {\n        name,\n        pic,\n        email,\n        password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/userActions\";\n\nconst Header = ({ setSearch }) => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push(\"/\");\n  };\n\n  return (\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <Link to=\"/\">Note It</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav className=\"m-auto\">\n            <Form className=\"d-flex\">\n              <FormControl\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"mr-2\"\n                aria-label=\"Search\"\n                onChange={(e) => setSearch(e.target.value)}\n              />\n            </Form>\n          </Nav>\n          {userInfo ? (\n            <Nav\n              className=\"my-2 my-lg-0\"\n              style={{ maxHeight: \"100px\" }}\n              navbarScroll\n            >\n              <Nav.Link>\n                <Link to=\"/mynotes\">My Notes</Link>\n              </Nav.Link>\n              <NavDropdown title={userInfo?.name} id=\"navbarScrollingDropdown\">\n                <NavDropdown.Item href=\"/profile\">My Profile</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={logoutHandler}>\n                  LogOut\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          ) : (\n            <Nav>\n              <Nav.Link>\n                <Link to=\"/login\">Login</Link>\n              </Nav.Link>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Note Zipper</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport \"./LandingPage.css\";\n\nconst LandingPage = ({ history }) => {\n  useEffect(() => {\n    const userInfo = localStorage.getItem(\"userInfo\");\n\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Note It</h1>\n              <p className=\"subtitle\">one stop for all your notes</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <a href=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </a>\n              <a href=\"/register\">\n                <Button\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                  variant=\"outline-primary\"\n                >\n                  Signup\n                </Button>\n              </a>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"./MainScreen.css\";\nimport { Container, Row } from \"react-bootstrap\";\n\nconst MainScreen = ({ title, children }) => {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = \"NOTE_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTE_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTE_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import axios from \"axios\";\nimport {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: NOTES_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/notes\", config);\n\n    dispatch({ type: NOTES_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createNoteAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_CREATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/notes/create`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const updateNoteAction =\n  (id, title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_UPDATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/notes/${id}`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loading = ({ size = 100 }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst MyNotes = ({ search }) => {\n  const dispatch = useDispatch();\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, notes, error } = noteList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  console.log(notes);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    successCreate,\n    successUpdate,\n    history,\n    userInfo,\n    successDelete,\n  ]);\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo.name}`}>\n      <Link to=\"/createnote\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create New Note\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion key={note._id}>\n              <Card style={{ margin: 10 }}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n                  <div>\n                    <Button href={`/note/${note._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category - {note.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <p>{note.content}</p>\n                      <footer className=\"blockquote-footer\">\n                        Created On{\" \"}\n                        <cite title=\"Source Title\">\n                          {note.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n};\n\nexport default MyNotes;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\n\nconst LoginScreen = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { register } from \"../../actions/userActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport MainScreen from \"../../components/MainScreen\";\n\nconst RegisterScreen = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const history = useHistory();\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password, pic));\n    }\n  };\n\n  const postDetails = (pics) => {\n    if (!pics) {\n      return setPicMessage(\"Please select an image\");\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"noteit\");\n      data.append(\"cloud_name\", \"dsbyrcj6w\");\n      fetch(\"https://api.cloudinary.com/v1_1/dsbyrcj6w/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data);\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setPicMessage(\"Please select a valid image\");\n    }\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id-=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an account? <Link to=\"/login\">Log in</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!title || !content || !category) return;\n    dispatch(createNoteAction(title, content, category));\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <Card>\n        <Card.Header>Create a new Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction EditNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Note\">\n      <Card>\n        <Card.Header>Edit your Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Note\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Note\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default EditNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/CreateNote/CreateNote\";\nimport EditNote from \"./screens/EditNote/EditNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n\n  console.log(search);\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/createnote\" component={CreateNote} />\n        <Route path=\"/note/:id\" component={EditNote} />\n        <Route path=\"/mynotes\" component={() => <MyNotes search={search} />} />\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCreate: noteCreateReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: true, userInfo: action.payload };\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}